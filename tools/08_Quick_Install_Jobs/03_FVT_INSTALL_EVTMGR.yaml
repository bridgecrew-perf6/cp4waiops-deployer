kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: installer-default-default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: default
    namespace: default
---
apiVersion: batch/v1
kind: Job
metadata:
  name: fvt-install-eventmgr
  namespace: default
spec:
  serviceAccountName: installer-default-default
  template:
    spec:
      containers:
        - name: install
          image: niklaushirt/cp4waiops-tools:1.3
          imagePullPolicy: IfNotPresent
          resources:
            requests:
              memory: "64Mi"
              cpu: "150m"
            limits:
              memory: "1256Mi"
              cpu: "1200m"
          command:
            - /bin/sh
            - -c
            - |
              #!/bin/bash
              #set -x


              echo "*****************************************************************************************************************************"
              echo " ✅ STARTING: CREATE SECRETS"
              echo "*****************************************************************************************************************************"
              echo ""
              echo ""


              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 🧻 Delete existing Secrets"
              oc delete secret ibm-entitlement-key -n cp4waiops
              oc delete secret ibm-aiops-pull-secret -n cp4waiops
              oc delete secret ibm-entitlement-key -n cp4waiops-evtmgr
              oc delete secret ibm-aiops-pull-secret -n cp4waiops-evtmgr
              oc delete secret ibm-entitlement-key -n openshift-marketplace
              oc delete secret ibm-aiops-pull-secret -n openshift-marketplace
              oc delete secret ibm-entitlement-key -n openshift-operators
              oc delete secret ibm-aiops-pull-secret -n openshift-operators
              echo ""
              echo ""



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 🚀 Creating Namespaces"
              oc create ns cp4waiops
              oc create ns cp4waiops-evtmgr
              echo ""
              echo ""



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 📥 Set Logins"
              export DOCKER_USER=your_docker_username
              export DOCKER_PWD=your_docker_password

              # The pull token for cp.icr.com from https://myibm.ibm.com/products-services/containerlibrary
              export ICR_TOKEN=your_IBM_PULL_TOKEN

              export ARTIFACTORY_USER=yourIBMeMail
              export ARTIFACTORY_TOKEN=changeme
              echo ""
              echo ""



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 🔐 Create Pull Secret File"
              oc get secret/pull-secret -n openshift-config -oyaml > pull-secret-backup.yaml
              oc get secret/pull-secret -n openshift-config --template='{{index .data ".dockerconfigjson" | base64decode}}' > temp-pull-secret.yaml
              oc registry login --registry="docker.io" --auth-basic="$DOCKER_USER:$DOCKER_PWD" --to=temp-pull-secret.yaml
              oc registry login --registry="hyc-katamari-cicd-team-docker-local.artifactory.swg-devops.com" --auth-basic="$ARTIFACTORY_USER:$ARTIFACTORY_TOKEN" --to=temp-pull-secret.yaml
              oc registry login --registry="cp.icr.io" --auth-basic="cp:$ICR_TOKEN" --to=temp-pull-secret.yaml
              oc registry login --registry="cp.stg.icr.io" --auth-basic="cp:$ICR_TOKEN" --to=temp-pull-secret.yaml
              oc set data secret/pull-secret -n openshift-config --from-file=.dockerconfigjson=temp-pull-secret.yaml

              oc get secret/pull-secret -n openshift-config --template='{{index .data ".dockerconfigjson" | base64decode}}' > temp-ibm-entitlement-key.yaml
              echo ""
              echo ""



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 🚀 Creating Pull Secrets"
              oc create secret generic ibm-entitlement-key -n cp4waiops --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              oc create secret generic ibm-entitlement-key -n cp4waiops-evtmgr --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              oc create secret generic ibm-entitlement-key -n openshift-marketplace --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              oc create secret generic ibm-entitlement-key -n openshift-operators --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml

              oc create secret generic ibm-aiops-pull-secret -n cp4waiops --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              oc create secret generic ibm-aiops-pull-secret -n cp4waiops-evtmgr --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              oc create secret generic ibm-aiops-pull-secret -n openshift-marketplace --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              oc create secret generic ibm-aiops-pull-secret -n openshift-operators --type=kubernetes.io/dockerconfigjson --from-file=.dockerconfigjson=temp-ibm-entitlement-key.yaml
              echo ""
              echo ""
              oc patch -n openshift-marketplace serviceaccount default -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
              oc patch -n openshift-marketplace serviceaccount ibm-operator-catalog -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
              oc delete pod $(oc get po -n openshift-marketplace|grep ImagePull|awk '{print$1}') -n openshift-marketplace


              oc patch -n cp4waiops-evtmgr serviceaccount default -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'
              oc patch -n cp4waiops-evtmgr serviceaccount noi-service-account -p '{"imagePullSecrets": [{"name": "ibm-entitlement-key"}]}'

              echo "*****************************************************************************************************************************"
              echo " ✅ DONE"
              echo "*****************************************************************************************************************************"
              echo ""
              echo ""

              echo "*****************************************************************************************************************************"
              echo " ✅ STARTING: INSTALL Event Manager"
              echo "*****************************************************************************************************************************"
              echo ""
              echo ""
              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 📥 Clone Repo $INSTALL_REPO"
              git clone $INSTALL_REPO
              cd cp4waiops-deployer
              echo ""
              echo ""



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 🚀 Prepare Ansible"
              ansible-galaxy collection install community.kubernetes:1.2.1
              ansible-galaxy collection install kubernetes.core:2.2.3
              ansible-galaxy collection install cloud.common
              pip install openshift pyyaml kubernetes 
              echo ""
              echo ""



              echo "------------------------------------------------------------------------------------------------------------------------------"
              echo " 🚀 Starting Installation"
              ansible-playbook ./ansible/00_cp4waiops-install.yaml -e "config_file_path=$CONFIG" -e CP_ENTITLEMENT_KEY=$ENTITLED_REGISTRY_KEY
              echo ""
              echo ""
              echo "*****************************************************************************************************************************"
              echo " ✅ DONE"
              echo "*****************************************************************************************************************************"



              sleep 60000

          env:
          - name: INSTALL_REPO
            value : "https://github.com/niklaushirt/cp4waiops-deployer.git"
          - name: CONFIG
            #value : "./configs/cp4waiops-roks-aimanager-all-34.yaml"
            value : "./configs/cp4waiops-roks-eventmanager-34.yaml"
            # The pull token for cp.icr.com from https://myibm.ibm.com/products-services/containerlibrary
          - name: ENTITLED_REGISTRY_KEY
            value : "your_IBM_PULL_TOKEN"
      restartPolicy: Never
  backoffLimit: 4
