

# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Create Gateway
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************
    
## RUNBOOKS Duplicate

- name: TIMESTAMP -              ðŸŸ¢ START - CREATE POLICY RUNBOOKS
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: AIManager Policies -      ðŸ“¥ WRITE TO LOGFILE
  shell: |
    export MESSAGE="Create Policy for Runbook Trigger"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: yes






- name: AIManager Policies -      ðŸš€ Create Runbook Trigger Policy
  shell: |


    # Get Runbook ID
    export WAIOPS_NAMESPACE=$(oc get po -A|grep aiops-orchestrator-controller |awk '{print$1}')
    echo $WAIOPS_NAMESPACE
    ZEN_API_HOST=$(oc get route -n $WAIOPS_NAMESPACE cpd -o jsonpath='{.spec.host}')
    echo $ZEN_API_HOST


  ignore_errors: yes
  register: POLICY_RESULT
  args:
    executable: /bin/bash


- name: DEBUG -                 ðŸŸ¢ Output
  debug: 
    var: POLICY_RESULT.stdout_lines



