
# *************************************************************************************************************************************************
# --------------------------------------------------------------------------------------------------------------------------------------
# Patches
# --------------------------------------------------------------------------------------------------------------------------------------
# *************************************************************************************************************************************************

- name: üõ∞Ô∏è  START - CREATE AWX CONNECTION
  debug: 
    msg="{{ lookup('pipe','date +%d.%m.%Y---%H:%M:%S') }}"


- name: Log
  shell: |
    export MESSAGE="Create AWX Connection"
    export currentDate=$(date +%Y-%m-%d_%H:%M)
    echo "---------------------------------------------------------------------------------------------------------------------------------------------------" >> ../install_{{current_cp4waiops_feature.kind}}.log
    echo $currentDate" - "$USER" - "$MESSAGE  >> ../install_{{current_cp4waiops_feature.kind}}.log
  ignore_errors: yes


- name: üöÄ ROUTES - Create AWX Connection (you can ignore errors in this step)
  shell: |
    oc create route passthrough -n {{current_cp4waiops_cluster.project}} --service aimanager-aio-controller

    export AI_PLATFORM_ROUTE=$(oc get route -n {{current_cp4waiops_cluster.project}} ai-platform-api  -o jsonpath={.spec.host})
    export AIO_PLATFORM_ROUTE=$(oc get route -n {{current_cp4waiops_cluster.project}} aimanager-aio-controller -o jsonpath={.spec.host})



    echo "        Namespace:          {{current_cp4waiops_cluster.project}}"
    echo "        AI_PLATFORM_ROUTE:  $AI_PLATFORM_ROUTE"
    echo "        AIO_PLATFORM_ROUTE: $AIO_PLATFORM_ROUTE"
    echo ""

    echo "       üõ†Ô∏è   Getting ZEN Token"

    ZEN_API_HOST=$(oc get route -n {{current_cp4waiops_cluster.project}} cpd -o jsonpath='{.spec.host}')
    ZEN_LOGIN_URL="https://${ZEN_API_HOST}/v1/preauth/signin"
    LOGIN_USER=admin
    LOGIN_PASSWORD="$(oc get secret admin-user-details -n {{current_cp4waiops_cluster.project}} -o jsonpath='{ .data.initial_admin_password }' | base64 --decode)"

    ZEN_LOGIN_RESPONSE=$(
    curl -k \
    -H 'Content-Type: application/json' \
    -XPOST \
    "${ZEN_LOGIN_URL}" \
    -d '{
        "username": "'"${LOGIN_USER}"'",
        "password": "'"${LOGIN_PASSWORD}"'"
    }' 2> /dev/null
    )

    ZEN_LOGIN_MESSAGE=$(echo "${ZEN_LOGIN_RESPONSE}" | jq -r .message)

    if [ "${ZEN_LOGIN_MESSAGE}" != "success" ]; then
        echo "Login failed: ${ZEN_LOGIN_MESSAGE}"

    fi

    ZEN_TOKEN=$(echo "${ZEN_LOGIN_RESPONSE}" | jq -r .token)
    echo "${ZEN_TOKEN}"
    echo "        AI_PLATFORM_ROUTE:  $ZEN_TOKEN"

    echo "Sucessfully logged in" 
    echo ""

    export AWX_URL="https://"$(oc get route -n awx awx -o jsonpath={.spec.host})
    export AWX_USER=admin
    export AWX_PWD=$(oc -n awx get secret awx-admin-password -o jsonpath='{.data.password}' | base64 --decode && echo)
    echo "                üåè URL:           $AWX_URL"
    echo "                üßë User:          $AWX_USER"
    echo "                üîê Password:      $AWX_PWD"
    echo "    "




    curl -X 'POST' --insecure \
    "https://$AIO_PLATFORM_ROUTE/v1/runbooks/connections/ansible" \
    -H 'accept: application/json' \
    -H 'Content-Type: application/json' \
      -H "authorization: Bearer $ZEN_TOKEN"  \
    -d "{
        \"type\": \"AWX\",
        \"connection_config\": \"userpass\",
        \"agentAccessData\": {
            \"url\": \"$AWX_URL\",
            \"username\": \"$AWX_USER\",
            \"password\": \"$AWX_PWD\"
        }
      }"
  


  ignore_errors: yes
  register: output_string
  args:
    executable: /bin/bash
  
- name: üü¢  OUTPUT
  debug: 
    var: output_string.stdout_lines
  #when: PRINT_LOGINS == true


